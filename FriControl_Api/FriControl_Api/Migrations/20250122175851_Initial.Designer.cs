// <auto-generated />
using System;
using FriControl_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FriControl_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250122175851_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FriControl_Api.Models.CategoriaItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("FriControl_Api.Models.FuncionarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SetorId")
                        .HasColumnType("integer");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SetorId");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("FriControl_Api.Models.ItemModel", b =>
                {
                    b.Property<int>("Patrimonio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Patrimonio"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("integer");

                    b.Property<string>("ModeloItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeItem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ObservacoesItem")
                        .HasColumnType("text");

                    b.HasKey("Patrimonio");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("FriControl_Api.Models.SetorFuncionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDeAlteracao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataDeCriacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NomeSetor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SetorFuncionarios");
                });

            modelBuilder.Entity("FriControl_Api.Models.UsuarioModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FriControl_Api.Models.FuncionarioModel", b =>
                {
                    b.HasOne("FriControl_Api.Models.SetorFuncionario", "Setor")
                        .WithMany("Funcionarios")
                        .HasForeignKey("SetorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Setor");
                });

            modelBuilder.Entity("FriControl_Api.Models.ItemModel", b =>
                {
                    b.HasOne("FriControl_Api.Models.CategoriaItemModel", "Categoria")
                        .WithMany("Items")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FriControl_Api.Models.FuncionarioModel", "Funcionario")
                        .WithMany("Items")
                        .HasForeignKey("FuncionarioId");

                    b.Navigation("Categoria");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("FriControl_Api.Models.CategoriaItemModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FriControl_Api.Models.FuncionarioModel", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("FriControl_Api.Models.SetorFuncionario", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
